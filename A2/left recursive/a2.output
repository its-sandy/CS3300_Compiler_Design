Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | func_decl

    6 var_decl: type_spec identifier ';'
    7         | type_spec identifier ',' var_decl
    8         | type_spec identifier '[' integerLit ']' ';'
    9         | type_spec identifier '[' integerLit ']' ',' var_decl

   10 type_spec: DATA_TYPE
   11          | DATA_TYPE STAR

   12 func_decl: type_spec identifier '(' params ')' compound_stmt

   13 params: param_list
   14       | epsilon

   15 epsilon: %empty

   16 param_list: param_list ',' param
   17           | param

   18 param: type_spec identifier
   19      | type_spec identifier '[' ']'

   20 stmt_list: stmt_list stmt
   21          | stmt

   22 stmt: assign_stmt
   23     | compound_stmt
   24     | if_stmt
   25     | while_stmt
   26     | return_stmt
   27     | break_stmt
   28     | continue_stmt

   29 while_stmt: WHILE_TOK '(' expr ')' stmt

   30 compound_stmt: '{' local_decls stmt_list '}'

   31 local_decls: local_decls local_decl
   32            | epsilon

   33 local_decl: type_spec identifier ';'
   34           | type_spec identifier '[' expr ']' ';'

   35 if_stmt: IF_TOK '(' expr ')' stmt
   36        | IF_TOK '(' expr ')' stmt ELSE_TOK stmt

   37 return_stmt: RETURN_TOK ';'
   38            | RETURN_TOK expr ';'

   39 break_stmt: BREAK_TOK ';'

   40 continue_stmt: CONTINUE_TOK ';'

   41 assign_stmt: identifier ASS_OP expr ';'
   42            | identifier '[' expr ']' ASS_OP expr ';'

   43 expr: Pexpr LOG_OR Pexpr
   44     | Pexpr LOG_AND Pexpr
   45     | Pexpr REL_OP2 Pexpr
   46     | Pexpr REL_OP1 Pexpr
   47     | Pexpr PLUSMIN Pexpr
   48     | Pexpr STAR Pexpr
   49     | Pexpr BINARY_OP Pexpr
   50     | PLUSMIN Pexpr
   51     | STAR Pexpr
   52     | UNARY_OP Pexpr
   53     | Pexpr
   54     | identifier '(' args ')'
   55     | identifier '[' expr ']'

   56 Pexpr: integerLit
   57      | floatLit
   58      | identifier
   59      | '(' expr ')'

   60 integerLit: INT_LITERAL

   61 floatLit: FLOAT_LITERAL

   62 identifier: IDENTIFIER_TOK

   63 arg_list: arg_list ',' expr
   64         | expr

   65 args: arg_list
   66     | epsilon


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 29 35 36 54 59
')' (41) 12 29 35 36 54 59
',' (44) 7 9 16 63
';' (59) 6 8 33 34 37 38 39 40 41 42
'[' (91) 8 9 19 34 42 55
']' (93) 8 9 19 34 42 55
'{' (123) 30
'}' (125) 30
error (256)
DATA_TYPE (258) 10 11
IF_TOK (259) 35 36
WHILE_TOK (260) 29
BREAK_TOK (261) 39
CONTINUE_TOK (262) 40
RETURN_TOK (263) 37 38
ASS_OP (264) 41 42
IDENTIFIER_TOK (265) 62
INT_LITERAL (266) 60
FLOAT_LITERAL (267) 61
PLUSMIN (268) 47 50
STAR (269) 11 48 51
pexp (270)
onlyif (271)
ELSE_TOK (272) 36
LOG_OR (273) 43
LOG_AND (274) 44
REL_OP2 (275) 45
REL_OP1 (276) 46
binplusmin (277)
binstar (278)
BINARY_OP (279) 49
UNARY_OP (280) 52
unplusmin (281)
unstar (282)
array (283)
function (284)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
decl_list (40)
    on left: 2 3, on right: 1 2
decl (41)
    on left: 4 5, on right: 2 3
var_decl (42)
    on left: 6 7 8 9, on right: 4 7 9
type_spec (43)
    on left: 10 11, on right: 6 7 8 9 12 18 19 33 34
func_decl (44)
    on left: 12, on right: 5
params (45)
    on left: 13 14, on right: 12
epsilon (46)
    on left: 15, on right: 14 32 66
param_list (47)
    on left: 16 17, on right: 13 16
param (48)
    on left: 18 19, on right: 16 17
stmt_list (49)
    on left: 20 21, on right: 20 30
stmt (50)
    on left: 22 23 24 25 26 27 28, on right: 20 21 29 35 36
while_stmt (51)
    on left: 29, on right: 25
compound_stmt (52)
    on left: 30, on right: 12 23
local_decls (53)
    on left: 31 32, on right: 30 31
local_decl (54)
    on left: 33 34, on right: 31
if_stmt (55)
    on left: 35 36, on right: 24
return_stmt (56)
    on left: 37 38, on right: 26
break_stmt (57)
    on left: 39, on right: 27
continue_stmt (58)
    on left: 40, on right: 28
assign_stmt (59)
    on left: 41 42, on right: 22
expr (60)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55, on right: 29 34
    35 36 38 41 42 55 59 63 64
Pexpr (61)
    on left: 56 57 58 59, on right: 43 44 45 46 47 48 49 50 51 52 53
integerLit (62)
    on left: 60, on right: 8 9 56
floatLit (63)
    on left: 61, on right: 57
identifier (64)
    on left: 62, on right: 6 7 8 9 12 18 19 33 34 41 42 54 55 58
arg_list (65)
    on left: 63 64, on right: 63 65
args (66)
    on left: 65 66, on right: 54


State 0

    0 $accept: . program $end

    DATA_TYPE  shift, and go to state 1

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    var_decl   go to state 5
    type_spec  go to state 6
    func_decl  go to state 7


State 1

   10 type_spec: DATA_TYPE .
   11          | DATA_TYPE . STAR

    STAR  shift, and go to state 8

    $default  reduce using rule 10 (type_spec)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 9


State 3

    1 program: decl_list .
    2 decl_list: decl_list . decl

    DATA_TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    decl       go to state 10
    var_decl   go to state 5
    type_spec  go to state 6
    func_decl  go to state 7


State 4

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 5

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 6

    6 var_decl: type_spec . identifier ';'
    7         | type_spec . identifier ',' var_decl
    8         | type_spec . identifier '[' integerLit ']' ';'
    9         | type_spec . identifier '[' integerLit ']' ',' var_decl
   12 func_decl: type_spec . identifier '(' params ')' compound_stmt

    IDENTIFIER_TOK  shift, and go to state 11

    identifier  go to state 12


State 7

    5 decl: func_decl .

    $default  reduce using rule 5 (decl)


State 8

   11 type_spec: DATA_TYPE STAR .

    $default  reduce using rule 11 (type_spec)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 11

   62 identifier: IDENTIFIER_TOK .

    $default  reduce using rule 62 (identifier)


State 12

    6 var_decl: type_spec identifier . ';'
    7         | type_spec identifier . ',' var_decl
    8         | type_spec identifier . '[' integerLit ']' ';'
    9         | type_spec identifier . '[' integerLit ']' ',' var_decl
   12 func_decl: type_spec identifier . '(' params ')' compound_stmt

    ';'  shift, and go to state 13
    ','  shift, and go to state 14
    '['  shift, and go to state 15
    '('  shift, and go to state 16


State 13

    6 var_decl: type_spec identifier ';' .

    $default  reduce using rule 6 (var_decl)


State 14

    7 var_decl: type_spec identifier ',' . var_decl

    DATA_TYPE  shift, and go to state 1

    var_decl   go to state 17
    type_spec  go to state 18


State 15

    8 var_decl: type_spec identifier '[' . integerLit ']' ';'
    9         | type_spec identifier '[' . integerLit ']' ',' var_decl

    INT_LITERAL  shift, and go to state 19

    integerLit  go to state 20


State 16

   12 func_decl: type_spec identifier '(' . params ')' compound_stmt

    DATA_TYPE  shift, and go to state 1

    $default  reduce using rule 15 (epsilon)

    type_spec   go to state 21
    params      go to state 22
    epsilon     go to state 23
    param_list  go to state 24
    param       go to state 25


State 17

    7 var_decl: type_spec identifier ',' var_decl .

    $default  reduce using rule 7 (var_decl)


State 18

    6 var_decl: type_spec . identifier ';'
    7         | type_spec . identifier ',' var_decl
    8         | type_spec . identifier '[' integerLit ']' ';'
    9         | type_spec . identifier '[' integerLit ']' ',' var_decl

    IDENTIFIER_TOK  shift, and go to state 11

    identifier  go to state 26


State 19

   60 integerLit: INT_LITERAL .

    $default  reduce using rule 60 (integerLit)


State 20

    8 var_decl: type_spec identifier '[' integerLit . ']' ';'
    9         | type_spec identifier '[' integerLit . ']' ',' var_decl

    ']'  shift, and go to state 27


State 21

   18 param: type_spec . identifier
   19      | type_spec . identifier '[' ']'

    IDENTIFIER_TOK  shift, and go to state 11

    identifier  go to state 28


State 22

   12 func_decl: type_spec identifier '(' params . ')' compound_stmt

    ')'  shift, and go to state 29


State 23

   14 params: epsilon .

    $default  reduce using rule 14 (params)


State 24

   13 params: param_list .
   16 param_list: param_list . ',' param

    ','  shift, and go to state 30

    $default  reduce using rule 13 (params)


State 25

   17 param_list: param .

    $default  reduce using rule 17 (param_list)


State 26

    6 var_decl: type_spec identifier . ';'
    7         | type_spec identifier . ',' var_decl
    8         | type_spec identifier . '[' integerLit ']' ';'
    9         | type_spec identifier . '[' integerLit ']' ',' var_decl

    ';'  shift, and go to state 13
    ','  shift, and go to state 14
    '['  shift, and go to state 15


State 27

    8 var_decl: type_spec identifier '[' integerLit ']' . ';'
    9         | type_spec identifier '[' integerLit ']' . ',' var_decl

    ';'  shift, and go to state 31
    ','  shift, and go to state 32


State 28

   18 param: type_spec identifier .
   19      | type_spec identifier . '[' ']'

    '['  shift, and go to state 33

    $default  reduce using rule 18 (param)


State 29

   12 func_decl: type_spec identifier '(' params ')' . compound_stmt

    '{'  shift, and go to state 34

    compound_stmt  go to state 35


State 30

   16 param_list: param_list ',' . param

    DATA_TYPE  shift, and go to state 1

    type_spec  go to state 21
    param      go to state 36


State 31

    8 var_decl: type_spec identifier '[' integerLit ']' ';' .

    $default  reduce using rule 8 (var_decl)


State 32

    9 var_decl: type_spec identifier '[' integerLit ']' ',' . var_decl

    DATA_TYPE  shift, and go to state 1

    var_decl   go to state 37
    type_spec  go to state 18


State 33

   19 param: type_spec identifier '[' . ']'

    ']'  shift, and go to state 38


State 34

   30 compound_stmt: '{' . local_decls stmt_list '}'

    $default  reduce using rule 15 (epsilon)

    epsilon      go to state 39
    local_decls  go to state 40


State 35

   12 func_decl: type_spec identifier '(' params ')' compound_stmt .

    $default  reduce using rule 12 (func_decl)


State 36

   16 param_list: param_list ',' param .

    $default  reduce using rule 16 (param_list)


State 37

    9 var_decl: type_spec identifier '[' integerLit ']' ',' var_decl .

    $default  reduce using rule 9 (var_decl)


State 38

   19 param: type_spec identifier '[' ']' .

    $default  reduce using rule 19 (param)


State 39

   32 local_decls: epsilon .

    $default  reduce using rule 32 (local_decls)


State 40

   30 compound_stmt: '{' local_decls . stmt_list '}'
   31 local_decls: local_decls . local_decl

    DATA_TYPE       shift, and go to state 1
    IF_TOK          shift, and go to state 41
    WHILE_TOK       shift, and go to state 42
    BREAK_TOK       shift, and go to state 43
    CONTINUE_TOK    shift, and go to state 44
    RETURN_TOK      shift, and go to state 45
    IDENTIFIER_TOK  shift, and go to state 11
    '{'             shift, and go to state 34

    type_spec      go to state 46
    stmt_list      go to state 47
    stmt           go to state 48
    while_stmt     go to state 49
    compound_stmt  go to state 50
    local_decl     go to state 51
    if_stmt        go to state 52
    return_stmt    go to state 53
    break_stmt     go to state 54
    continue_stmt  go to state 55
    assign_stmt    go to state 56
    identifier     go to state 57


State 41

   35 if_stmt: IF_TOK . '(' expr ')' stmt
   36        | IF_TOK . '(' expr ')' stmt ELSE_TOK stmt

    '('  shift, and go to state 58


State 42

   29 while_stmt: WHILE_TOK . '(' expr ')' stmt

    '('  shift, and go to state 59


State 43

   39 break_stmt: BREAK_TOK . ';'

    ';'  shift, and go to state 60


State 44

   40 continue_stmt: CONTINUE_TOK . ';'

    ';'  shift, and go to state 61


State 45

   37 return_stmt: RETURN_TOK . ';'
   38            | RETURN_TOK . expr ';'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    ';'             shift, and go to state 66
    '('             shift, and go to state 67

    expr        go to state 68
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 46

   33 local_decl: type_spec . identifier ';'
   34           | type_spec . identifier '[' expr ']' ';'

    IDENTIFIER_TOK  shift, and go to state 11

    identifier  go to state 73


State 47

   20 stmt_list: stmt_list . stmt
   30 compound_stmt: '{' local_decls stmt_list . '}'

    IF_TOK          shift, and go to state 41
    WHILE_TOK       shift, and go to state 42
    BREAK_TOK       shift, and go to state 43
    CONTINUE_TOK    shift, and go to state 44
    RETURN_TOK      shift, and go to state 45
    IDENTIFIER_TOK  shift, and go to state 11
    '{'             shift, and go to state 34
    '}'             shift, and go to state 74

    stmt           go to state 75
    while_stmt     go to state 49
    compound_stmt  go to state 50
    if_stmt        go to state 52
    return_stmt    go to state 53
    break_stmt     go to state 54
    continue_stmt  go to state 55
    assign_stmt    go to state 56
    identifier     go to state 57


State 48

   21 stmt_list: stmt .

    $default  reduce using rule 21 (stmt_list)


State 49

   25 stmt: while_stmt .

    $default  reduce using rule 25 (stmt)


State 50

   23 stmt: compound_stmt .

    $default  reduce using rule 23 (stmt)


State 51

   31 local_decls: local_decls local_decl .

    $default  reduce using rule 31 (local_decls)


State 52

   24 stmt: if_stmt .

    $default  reduce using rule 24 (stmt)


State 53

   26 stmt: return_stmt .

    $default  reduce using rule 26 (stmt)


State 54

   27 stmt: break_stmt .

    $default  reduce using rule 27 (stmt)


State 55

   28 stmt: continue_stmt .

    $default  reduce using rule 28 (stmt)


State 56

   22 stmt: assign_stmt .

    $default  reduce using rule 22 (stmt)


State 57

   41 assign_stmt: identifier . ASS_OP expr ';'
   42            | identifier . '[' expr ']' ASS_OP expr ';'

    ASS_OP  shift, and go to state 76
    '['     shift, and go to state 77


State 58

   35 if_stmt: IF_TOK '(' . expr ')' stmt
   36        | IF_TOK '(' . expr ')' stmt ELSE_TOK stmt

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 78
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 59

   29 while_stmt: WHILE_TOK '(' . expr ')' stmt

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 79
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 60

   39 break_stmt: BREAK_TOK ';' .

    $default  reduce using rule 39 (break_stmt)


State 61

   40 continue_stmt: CONTINUE_TOK ';' .

    $default  reduce using rule 40 (continue_stmt)


State 62

   61 floatLit: FLOAT_LITERAL .

    $default  reduce using rule 61 (floatLit)


State 63

   50 expr: PLUSMIN . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 80
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 64

   51 expr: STAR . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 82
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 65

   52 expr: UNARY_OP . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 83
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 66

   37 return_stmt: RETURN_TOK ';' .

    $default  reduce using rule 37 (return_stmt)


State 67

   59 Pexpr: '(' . expr ')'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 84
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 68

   38 return_stmt: RETURN_TOK expr . ';'

    ';'  shift, and go to state 85


State 69

   43 expr: Pexpr . LOG_OR Pexpr
   44     | Pexpr . LOG_AND Pexpr
   45     | Pexpr . REL_OP2 Pexpr
   46     | Pexpr . REL_OP1 Pexpr
   47     | Pexpr . PLUSMIN Pexpr
   48     | Pexpr . STAR Pexpr
   49     | Pexpr . BINARY_OP Pexpr
   53     | Pexpr .

    PLUSMIN    shift, and go to state 86
    STAR       shift, and go to state 87
    LOG_OR     shift, and go to state 88
    LOG_AND    shift, and go to state 89
    REL_OP2    shift, and go to state 90
    REL_OP1    shift, and go to state 91
    BINARY_OP  shift, and go to state 92

    $default  reduce using rule 53 (expr)


State 70

   56 Pexpr: integerLit .

    $default  reduce using rule 56 (Pexpr)


State 71

   57 Pexpr: floatLit .

    $default  reduce using rule 57 (Pexpr)


State 72

   54 expr: identifier . '(' args ')'
   55     | identifier . '[' expr ']'
   58 Pexpr: identifier .

    '['  shift, and go to state 93
    '('  shift, and go to state 94

    $default  reduce using rule 58 (Pexpr)


State 73

   33 local_decl: type_spec identifier . ';'
   34           | type_spec identifier . '[' expr ']' ';'

    ';'  shift, and go to state 95
    '['  shift, and go to state 96


State 74

   30 compound_stmt: '{' local_decls stmt_list '}' .

    $default  reduce using rule 30 (compound_stmt)


State 75

   20 stmt_list: stmt_list stmt .

    $default  reduce using rule 20 (stmt_list)


State 76

   41 assign_stmt: identifier ASS_OP . expr ';'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 97
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 77

   42 assign_stmt: identifier '[' . expr ']' ASS_OP expr ';'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 98
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 78

   35 if_stmt: IF_TOK '(' expr . ')' stmt
   36        | IF_TOK '(' expr . ')' stmt ELSE_TOK stmt

    ')'  shift, and go to state 99


State 79

   29 while_stmt: WHILE_TOK '(' expr . ')' stmt

    ')'  shift, and go to state 100


State 80

   50 expr: PLUSMIN Pexpr .

    $default  reduce using rule 50 (expr)


State 81

   58 Pexpr: identifier .

    $default  reduce using rule 58 (Pexpr)


State 82

   51 expr: STAR Pexpr .

    $default  reduce using rule 51 (expr)


State 83

   52 expr: UNARY_OP Pexpr .

    $default  reduce using rule 52 (expr)


State 84

   59 Pexpr: '(' expr . ')'

    ')'  shift, and go to state 101


State 85

   38 return_stmt: RETURN_TOK expr ';' .

    $default  reduce using rule 38 (return_stmt)


State 86

   47 expr: Pexpr PLUSMIN . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 102
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 87

   48 expr: Pexpr STAR . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 103
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 88

   43 expr: Pexpr LOG_OR . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 104
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 89

   44 expr: Pexpr LOG_AND . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 105
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 90

   45 expr: Pexpr REL_OP2 . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 106
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 91

   46 expr: Pexpr REL_OP1 . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 107
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 92

   49 expr: Pexpr BINARY_OP . Pexpr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    '('             shift, and go to state 67

    Pexpr       go to state 108
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 81


State 93

   55 expr: identifier '[' . expr ']'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 109
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 94

   54 expr: identifier '(' . args ')'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    $default  reduce using rule 15 (epsilon)

    epsilon     go to state 110
    expr        go to state 111
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72
    arg_list    go to state 112
    args        go to state 113


State 95

   33 local_decl: type_spec identifier ';' .

    $default  reduce using rule 33 (local_decl)


State 96

   34 local_decl: type_spec identifier '[' . expr ']' ';'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 114
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 97

   41 assign_stmt: identifier ASS_OP expr . ';'

    ';'  shift, and go to state 115


State 98

   42 assign_stmt: identifier '[' expr . ']' ASS_OP expr ';'

    ']'  shift, and go to state 116


State 99

   35 if_stmt: IF_TOK '(' expr ')' . stmt
   36        | IF_TOK '(' expr ')' . stmt ELSE_TOK stmt

    IF_TOK          shift, and go to state 41
    WHILE_TOK       shift, and go to state 42
    BREAK_TOK       shift, and go to state 43
    CONTINUE_TOK    shift, and go to state 44
    RETURN_TOK      shift, and go to state 45
    IDENTIFIER_TOK  shift, and go to state 11
    '{'             shift, and go to state 34

    stmt           go to state 117
    while_stmt     go to state 49
    compound_stmt  go to state 50
    if_stmt        go to state 52
    return_stmt    go to state 53
    break_stmt     go to state 54
    continue_stmt  go to state 55
    assign_stmt    go to state 56
    identifier     go to state 57


State 100

   29 while_stmt: WHILE_TOK '(' expr ')' . stmt

    IF_TOK          shift, and go to state 41
    WHILE_TOK       shift, and go to state 42
    BREAK_TOK       shift, and go to state 43
    CONTINUE_TOK    shift, and go to state 44
    RETURN_TOK      shift, and go to state 45
    IDENTIFIER_TOK  shift, and go to state 11
    '{'             shift, and go to state 34

    stmt           go to state 118
    while_stmt     go to state 49
    compound_stmt  go to state 50
    if_stmt        go to state 52
    return_stmt    go to state 53
    break_stmt     go to state 54
    continue_stmt  go to state 55
    assign_stmt    go to state 56
    identifier     go to state 57


State 101

   59 Pexpr: '(' expr ')' .

    $default  reduce using rule 59 (Pexpr)


State 102

   47 expr: Pexpr PLUSMIN Pexpr .

    $default  reduce using rule 47 (expr)


State 103

   48 expr: Pexpr STAR Pexpr .

    $default  reduce using rule 48 (expr)


State 104

   43 expr: Pexpr LOG_OR Pexpr .

    $default  reduce using rule 43 (expr)


State 105

   44 expr: Pexpr LOG_AND Pexpr .

    $default  reduce using rule 44 (expr)


State 106

   45 expr: Pexpr REL_OP2 Pexpr .

    $default  reduce using rule 45 (expr)


State 107

   46 expr: Pexpr REL_OP1 Pexpr .

    $default  reduce using rule 46 (expr)


State 108

   49 expr: Pexpr BINARY_OP Pexpr .

    $default  reduce using rule 49 (expr)


State 109

   55 expr: identifier '[' expr . ']'

    ']'  shift, and go to state 119


State 110

   66 args: epsilon .

    $default  reduce using rule 66 (args)


State 111

   64 arg_list: expr .

    $default  reduce using rule 64 (arg_list)


State 112

   63 arg_list: arg_list . ',' expr
   65 args: arg_list .

    ','  shift, and go to state 120

    $default  reduce using rule 65 (args)


State 113

   54 expr: identifier '(' args . ')'

    ')'  shift, and go to state 121


State 114

   34 local_decl: type_spec identifier '[' expr . ']' ';'

    ']'  shift, and go to state 122


State 115

   41 assign_stmt: identifier ASS_OP expr ';' .

    $default  reduce using rule 41 (assign_stmt)


State 116

   42 assign_stmt: identifier '[' expr ']' . ASS_OP expr ';'

    ASS_OP  shift, and go to state 123


State 117

   35 if_stmt: IF_TOK '(' expr ')' stmt .
   36        | IF_TOK '(' expr ')' stmt . ELSE_TOK stmt

    ELSE_TOK  shift, and go to state 124

    $default  reduce using rule 35 (if_stmt)


State 118

   29 while_stmt: WHILE_TOK '(' expr ')' stmt .

    $default  reduce using rule 29 (while_stmt)


State 119

   55 expr: identifier '[' expr ']' .

    $default  reduce using rule 55 (expr)


State 120

   63 arg_list: arg_list ',' . expr

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 125
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 121

   54 expr: identifier '(' args ')' .

    $default  reduce using rule 54 (expr)


State 122

   34 local_decl: type_spec identifier '[' expr ']' . ';'

    ';'  shift, and go to state 126


State 123

   42 assign_stmt: identifier '[' expr ']' ASS_OP . expr ';'

    IDENTIFIER_TOK  shift, and go to state 11
    INT_LITERAL     shift, and go to state 19
    FLOAT_LITERAL   shift, and go to state 62
    PLUSMIN         shift, and go to state 63
    STAR            shift, and go to state 64
    UNARY_OP        shift, and go to state 65
    '('             shift, and go to state 67

    expr        go to state 127
    Pexpr       go to state 69
    integerLit  go to state 70
    floatLit    go to state 71
    identifier  go to state 72


State 124

   36 if_stmt: IF_TOK '(' expr ')' stmt ELSE_TOK . stmt

    IF_TOK          shift, and go to state 41
    WHILE_TOK       shift, and go to state 42
    BREAK_TOK       shift, and go to state 43
    CONTINUE_TOK    shift, and go to state 44
    RETURN_TOK      shift, and go to state 45
    IDENTIFIER_TOK  shift, and go to state 11
    '{'             shift, and go to state 34

    stmt           go to state 128
    while_stmt     go to state 49
    compound_stmt  go to state 50
    if_stmt        go to state 52
    return_stmt    go to state 53
    break_stmt     go to state 54
    continue_stmt  go to state 55
    assign_stmt    go to state 56
    identifier     go to state 57


State 125

   63 arg_list: arg_list ',' expr .

    $default  reduce using rule 63 (arg_list)


State 126

   34 local_decl: type_spec identifier '[' expr ']' ';' .

    $default  reduce using rule 34 (local_decl)


State 127

   42 assign_stmt: identifier '[' expr ']' ASS_OP expr . ';'

    ';'  shift, and go to state 129


State 128

   36 if_stmt: IF_TOK '(' expr ')' stmt ELSE_TOK stmt .

    $default  reduce using rule 36 (if_stmt)


State 129

   42 assign_stmt: identifier '[' expr ']' ASS_OP expr ';' .

    $default  reduce using rule 42 (assign_stmt)
